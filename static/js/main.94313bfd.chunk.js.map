{"version":3,"sources":["AppBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","props","Box","tag","direction","align","justify","pad","left","right","vertical","elevation","style","zIndex","theme","global","font","family","size","height","App","Grommet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAgBeA,EAbA,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,aACFC,IAAI,SACJC,UAAU,MACVC,MAAM,SACNC,QAAQ,UACRC,IAAK,CAAEC,KAAM,SAAUC,MAAO,QAASC,SAAU,SACjDC,UAAU,SACVC,MAAO,CAAEC,OAAQ,IACbZ,KCPFa,EAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRC,KAAM,OACNC,OAAQ,UAaCC,MARf,WACE,OACC,cAACC,EAAA,EAAD,CAASP,MAAOA,EAAhB,SACE,cAAC,EAAD,uBCJUQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94313bfd.chunk.js","sourcesContent":["import {Box, BoxExtendedProps} from \"grommet\";\r\nimport {ReactNode} from \"react\";\r\n\r\nconst AppBar = (props: JSX.IntrinsicAttributes & BoxExtendedProps & { children?: ReactNode; }) => (\r\n      <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    elevation='medium'\r\n    style={{ zIndex: 1 }}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default AppBar;","import React from 'react';\nimport './App.css';\nimport { Grommet } from 'grommet';\nimport AppBar from \"./AppBar\";\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nfunction App() {\n  return (\n   <Grommet theme={theme}>\n     <AppBar>Hello</AppBar>\n   </Grommet>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}